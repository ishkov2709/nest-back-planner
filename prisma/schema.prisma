generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  createdAt        DateTime          @default(now()) @map("created_at")
  utdatedAt        DateTime          @updatedAt @map("updated_at")
  email            String            @unique
  name             String?
  password         String
  workInterval     Int?              @default(50)
  beakInterval     Int?              @default(10)
  intervalCount    Int?              @default(7)
  tomodoroSessions PomodoroSession[]
  tasks            Task[]
  timeBlocks       TimeBlock[]

  @@map("user")
}

model Task {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @map("created_at")
  utdatedAt   DateTime  @updatedAt @map("updated_at")
  name        String
  priority    Priority?
  isCompleted Boolean?  @default(false) @map("is_completed")
  userId      String    @map("user_id")
  user        User      @relation(fields: [userId], references: [id])

  @@map("task")
}

model TimeBlock {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  utdatedAt DateTime @updatedAt @map("updated_at")
  name      String
  color     String?
  duration  Int
  order     Int?     @default(1)
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])

  @@map("time_block")
}

model PomodoroSession {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now()) @map("created_at")
  utdatedAt      DateTime        @updatedAt @map("updated_at")
  userId         String          @map("user_id")
  pomodoroRounds PomodoroRound[]
  user           User            @relation(fields: [userId], references: [id])

  @@map("pomodoro_session")
}

model PomodoroRound {
  id                String          @id @default(cuid())
  createdAt         DateTime        @default(now()) @map("created_at")
  utdatedAt         DateTime        @updatedAt @map("updated_at")
  totalSeconds      Int
  isCompleted       Boolean?        @default(false) @map("is_completed")
  pomodoroSessionId String          @map("pomodoro_session_id")
  pomodoroSession   PomodoroSession @relation(fields: [pomodoroSessionId], references: [id], onDelete: Cascade)

  @@map("pomodoro_round")
}

enum Priority {
  low
  medium
  high
}
